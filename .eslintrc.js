module.exports = {
    root: true,
    parser: "@typescript-eslint/parser",
    parserOptions: {
        ecmaVersion: 2020,
        sourceType: "module",
        ecmaFeatures: { jsx: true },
        tsconfigRootDir: __dirname,
        project: ["./tsconfig.json"],
    },
    reportUnusedDisableDirectives: true,
    extends: [
        "eslint:recommended",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:import/recommended",
        "plugin:import/typescript",
    ],
    plugins: ["no-relative-import-paths", "import"],
    settings: {
        "import/resolver": { typescript: { project: "./tsconfig.json" } },
    },
    rules: {
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/ban-types": ["error", { types: { extendDefaults: true, "{}": false } }],
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-confusing-void-expression": [
            "error",
            { ignoreArrowShorthand: true },
        ],
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                vars: "all",
                args: "after-used",
                argsIgnorePattern: "^_",
                ignoreRestSiblings: true,
            },
        ],
        "@typescript-eslint/no-var-requires": "off",
        "dot-notation": "error",
        eqeqeq: ["error", "always"],
        "import/order": [
            "error",
            {
                groups: [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "index",
                    "object",
                    "type",
                ],
                "newlines-between": "never",
                alphabetize: { order: "asc", caseInsensitive: true },
            },
        ],
        "no-console": "error",
        "no-constructor-return": "error",
        "no-extra-bind": "error",
        "no-lone-blocks": "error",
        "no-new-wrappers": "error",
        "no-restricted-imports": [
            "error",
            {
                paths: [{ name: "@/index", message: "Import from the actual path instead." }],
                patterns: [".*"],
            },
        ],
        "no-relative-import-paths/no-relative-import-paths": ["warn", { allowSameFolder: true }],
        "no-self-compare": "error",
        "no-useless-rename": "warn",
        "no-unreachable-loop": "error",
        "valid-typeof": "error",
    },
};
